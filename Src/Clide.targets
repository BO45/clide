<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Target Name="EnsureVisualStudioVersion" BeforeTargets="BeforeBuild">
        <Error Condition="'$(VisualStudioVersion)' == ''"
               ContinueOnError="false"
               Text="Please provide the VisualStudioVersion property as a parameter to MSBuild to specify the target version of VS to build the extension for (i.e. '10.0' or '11.0')." />
        <Message Text="Building for Visual Studio $(VisualStudioVersion), Target Framework $(TargetFrameworkVersion), Platform $(Platform)"
                 Importance="high" />
    </Target>

    <Target Name="EnsureClideBuiltForDev10"
            BeforeTargets="BeforeBuild"
            Condition="'$(VisualStudioVersion)' == '10.0' And '' != ''">
        <Error Condition="!Exists('$(BuildRoot)Src\Clide\nuget\lib\net40\Clide.dll')"
               ContinueOnError="false"
               Text="Before building on Visual Studio 2010, make sure you have built the solution with Visual Studio 2012 or greater using the same configuration." />
    </Target>
    
    <!-- Merges references that are CopyLocal and have an <IlMerge>true</IlMerge> item metadata -->
    <Target Name="IlMerge" BeforeTargets="AfterBuild" Condition="$(NuGet) == 'true'">
        <ItemGroup>
            <AssembliesToMerge Include="@(ReferenceCopyLocalPaths)" Condition="'%(Extension)' == '.dll' And '%(ReferenceCopyLocalPaths.IlMerge)' == 'true'" />
            <LibDir Include="@(ReferencePath-&gt;'%(RootDir)%(Directory)'-&gt;Distinct())" />
            <MergedAssemblies Include="@(AssembliesToMerge->'$(OutDir)%(Filename)%(Extension)')" />
            <MergedDocFiles Include="@(AssembliesToMerge->'$(OutDir)%(Filename).xml')" />
            <FilesToDelete Include="@(MergedAssemblies)" />
            <FilesToDelete Include="@(MergedDocFiles)" Condition="Exists(%(FullPath))" />
        </ItemGroup>
        <Message Text="IL merging assemblies: @(AssembliesToMerge)" />
        <PropertyGroup>
            <ExcludeFile Condition="Exists('$(MSBuildProjectPath)ilmerge.exclude')">:"$(MSBuildProjectPath)ilmerge.exclude"</ExcludeFile>
        </PropertyGroup>
        <Exec Command="&quot;$(SolutionDir)Lib\ILMerge.exe&quot; @(LibDir->'/lib:&quot;%(FullPath)\&quot;', ' ') /internalize$(ExcludeFile) /ndebug /keyfile:&quot;$(AssemblyOriginatorKeyFile)&quot; /targetplatform:v4,&quot;$(MSBuildToolsPath)&quot; /out:&quot;@(MainAssembly)&quot; &quot;@(IntermediateAssembly)&quot; @(AssembliesToMerge->'&quot;%(FullPath)&quot;', ' ')" ContinueOnError="false" />
        <Delete Files="@(FilesToDelete)" ContinueOnError="false" TreatErrorsAsWarnings="true" />
    </Target>

    <Target Name="CleanCopyLocal" AfterTargets="IlMerge" Condition="$(NuGet) == 'true'">
        <ItemGroup>
            <AssembliesToBundle Include="@(ReferenceCopyLocalPaths)" Condition="'%(Extension)' == '.dll' And '%(ReferenceCopyLocalPaths.Bundle)' != 'true'" />
            <AssembliesToClean Include="@(AssembliesToBundle->'$(OutDir)%(Filename)%(Extension)')" />
        </ItemGroup>
        <Delete Files="@(AssembliesToClean)" ContinueOnError="false" TreatErrorsAsWarnings="true" />
    </Target>

    <!--<Target Name="CleanLib" AfterTargets="Clean">
        <ItemGroup>
            <ItemsToClean Include="$(OutputPath)**\*.*" />
        </ItemGroup>
        --><!--<Exec Command="rmdir /s &quot;$(OutputPath)&quot;" ContinueOnError="false" />--><!--
        <Delete Files="@(ItemsToClean)" ContinueOnError="true" />
        <RemoveDir Directories="$(OutputPath)" Condition="true" />
    </Target>-->

    <Target Name="BuildPackage" AfterTargets="AfterBuild" Condition="$(NuGet) == 'true'">
        <Copy SourceFiles="@(NuSpec)" DestinationFiles="@(NuSpec->'nuget\%(Filename)%(Extension)')" SkipUnchangedFiles="true" ContinueOnError="false">
            <Output TaskParameter="DestinationFiles" ItemName="NuSpecOut" />
        </Copy>
        <Copy SourceFiles="@(SymbolSource)" DestinationFiles="@(SymbolSource->'nuget\src\%(RecursiveDir)%(Filename)%(Extension)')" ContinueOnError="false" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" />
        <Exec Command="&quot;$(NuGetExe)&quot; pack -NoPackageAnalysis &quot;%(NuSpecOut.FullPath)&quot; -Symbols -OutputDirectory &quot;$(DropDirectory.TrimEnd('\'))&quot; -Version &quot;$(PackageVersion)&quot;"
              ContinueOnError="false" />
    </Target>
</Project>
